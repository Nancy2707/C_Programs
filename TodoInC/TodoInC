#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_TASKS 100
#define TASK_LENGTH 100

void addTask(char tasks[][TASK_LENGTH], int *taskCount) {
    if (*taskCount >= MAX_TASKS) {
        printf("Task list is full!\n");
        return;
    }
    printf("Enter task: ");
    getchar(); // to clear newline from buffer
    fgets(tasks[*taskCount], TASK_LENGTH, stdin);
    tasks[*taskCount][strcspn(tasks[*taskCount], "\n")] = 0; // remove newline
    (*taskCount)++;
}

void viewTasks(char tasks[][TASK_LENGTH], int taskCount) {
    if (taskCount == 0) {
        printf("No tasks available!\n");
        return;
    }
    for (int i = 0; i < taskCount; i++) {
        printf("%d. %s\n", i + 1, tasks[i]);
    }
}

void deleteTask(char tasks[][TASK_LENGTH], int *taskCount) {
    int taskNumber;
    printf("Enter task number to delete: ");
    scanf("%d", &taskNumber);
    if (taskNumber < 1 || taskNumber > *taskCount) {
        printf("Invalid task number!\n");
        return;
    }
    for (int i = taskNumber - 1; i < *taskCount - 1; i++) {
        strcpy(tasks[i], tasks[i + 1]);
    }
    (*taskCount)--;
}

int main() {
    char tasks[MAX_TASKS][TASK_LENGTH];
    int taskCount = 0;
    int choice;

    while (1) {
        printf("\nTo-Do List\n");
        printf("1. Add Task\n");
        printf("2. View Tasks\n");
        printf("3. Delete Task\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addTask(tasks, &taskCount);
                break;
            case 2:
                viewTasks(tasks, taskCount);
                break;
            case 3:
                deleteTask(tasks, &taskCount);
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid choice!\n");
        }
    }

    return 0;
}
